<div class="container">
  <div class="row">
    <div class="col-9">
      <div class="article-container">
        {{#if (eq article.type "pre")}}
        <button id="download-btn" class="btn btn-primary mt-3">Download PDF</button>
        {{/if}}
        <h1 class="article-header">{{article.title}}</h1>

        <div class="article-metadata">
          <span class="article-author">{{article.author_id.username}}</span>
          |
          <span class="article-date">Published on:
            {{article.created_at}}</span>
        </div>
        <div class="article-metadata">
          <span class="article-author">Category: <a href="/search/category/{{article.category_id._id}}">{{article.category_id.name}}</a></span>
          |
            <span class="article-date">Tag:
              {{#each articleTags}}
                <a href="/search/tag/{{this.tag_id._id}}">
                  {{this.tag_id.name}}
                </a>
              {{/each}}
              </span>
        </div>

        <div class="article-summary">
          <h2>Summary</h2>
          <p>{{article.summary}}</p>
        </div>

        <div class="article-content">
          <h2>Content</h2>
          <p>{{{article.content}}}</p>
        </div>
      </div>
    </div>
    <div class="col-3">
      {{#each articles}}
        <div class="col">
          <div class="card">
            <a href="/articleDetail/{{this._id}}">
              <img
                src="{{this.image_url}}"
                class="card-img-top"
                alt="Article Image"
              />
            </a>
            <div class="card-body">
              <a href="/articleDetail/{{this._id}}"><h5
                  class="card-title"
                >{{this.title}}</h5></a>
              <p class="card-text"><strong>Categories:</strong>
                {{this.category_id.name}}</p>
              <p class="card-text"><strong>Date of Publication:</strong>
                {{this.created_at}}</p>
              <div class="d-flex align-items-center">
                <img
                  src="{{this.author_id.image}}"
                  class="rounded-circle mr-2"
                  alt="Profile Picture"
                />
                <p class="mb-0">{{this.author_id.username}}</p>
              </div>
            </div>
          </div>
        </div>
      {{/each}}
    </div>
  </div>
</div>


<script>
document.addEventListener("DOMContentLoaded", () => {
  const { jsPDF } = window.jspdf;

  function ensureImagesLoaded(container, callback) {
    const images = container.querySelectorAll("img");
    const totalImages = images.length;
    let loadedCount = 0;

    if (totalImages === 0) {
      callback();
      return;
    }

    images.forEach((img) => {
      if (img.complete) {
        loadedCount++;
        if (loadedCount === totalImages) callback();
      } else {
        img.onload = img.onerror = () => {
          loadedCount++;
          if (loadedCount === totalImages) callback();
        };
      }
    });
  }

  const downloadBtn = document.getElementById("download-btn");
  if (downloadBtn) {
    downloadBtn.addEventListener("click", () => {
      const articleContainer = document.querySelector(".article-container");
      const title = document.querySelector(".article-header").innerText; // Lấy tiêu đề bài viết

      // Tạm thời ẩn nút Download PDF
      downloadBtn.style.display = "none";

      ensureImagesLoaded(articleContainer, () => {
        html2canvas(articleContainer, { useCORS: true }).then((canvas) => {
          const imgData = canvas.toDataURL("image/png");

          const doc = new jsPDF({
            orientation: "portrait",
            unit: "px",
            format: "a4",
          });

          const pdfWidth = doc.internal.pageSize.getWidth();
          const pdfHeight = doc.internal.pageSize.getHeight();
          const imgWidth = canvas.width;
          const imgHeight = canvas.height;

          const scaleFactor = Math.min(pdfWidth / imgWidth, pdfHeight / imgHeight);
          const scaledWidth = imgWidth * scaleFactor;
          const scaledHeight = imgHeight * scaleFactor;

          doc.addImage(imgData, "PNG", 0, 0, scaledWidth, scaledHeight);

          const sanitizedTitle = title.replace(/[^a-zA-Z0-9-_ ]/g, "");
          doc.save(`${sanitizedTitle || "article"}.pdf`);

          // Hiển thị lại nút Download PDF
          downloadBtn.style.display = "block";
        });
      });
    });
  }
});

</script>